{"version":3,"sources":["components/LandingPage/index.js","components/NavBar/index.js","actions/actionsNames.js","constants.js","actions/index.js","Loading/index.js","components/Home/index.js","components/PokemonDetail/index.js","components/Validate/validate.js","components/CreatePokemon/index.js","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["LandingPage","className","to","NavBar","GET_POKEMONS","GET_POKEMONS_TYPES","GET_POKEMONS_DETAIL","POKEMON_URL","getPokemonsTypes","dispatch","axios","get","then","response","type","payload","data","catch","error","console","log","LoadingSpin","Home","allPokemons","useSelector","state","useDispatch","useState","currentPage","setCurrentPage","input","setInput","setLoading","pokemonsTypes","filteredPokemons","setFilteredPokemons","useEffect","filteredPoke","length","filter","poke","name","includes","slice","onClick","placeholder","value","onChange","e","target","result","sort","a","b","hp","handleOrderChange","arrayPoke","el","Types","handleFilterChange","map","id","src","sprite","p","i","PokemonDetail","pokemonDetail","loading","useParams","status","alert","getPokemonDetail","undefined","alt","attack","defense","height","weight","speed","Validate","errors","reg","search","CreatePokemon","setTypes","Errors","setErrors","create","stop","setStop","total","reduce","acc","elem","push","Object","keys","handleInputChange","handleSubmit","preventDefault","post","onSubmit","values","handleTypes","t","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4e1d547.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './landing.css'\n\nfunction LandingPage() {\n\n    return (\n        <div className='landingPage'>\n            <div>\n                <h2>POKEMON APP</h2>\n            </div>\n            <div>\n                <h3>WELCOME</h3>\n                \n            </div>\n            <div className='div-btn'>\n                <Link to={`/home`} > \n                    <button>ENTER</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nexport default function NavBar() {\n    return (\n        <header className=\"navbar\">\n            <nav>\n                    <div>\n                        <NavLink to={`/home`}>LOGO O NOMBRE DE LA APP</NavLink>\n                    </div>\n                    <div>\n                        <NavLink to={`/home`}>HOME</NavLink>\n                    </div>\n                    <div>\n                        <NavLink to={`/create`}>CREATE POKEMON</NavLink>\n                    </div>\n            </nav>\n        </header>\n    )\n}","export const GET_POKEMONS = 'GET_POKEMONS';\nexport const GET_POKEMONS_TYPES = 'GET_POKEMONS_TYPES';\nexport const GET_POKEMONS_DETAIL = 'GET_POKEMONS_DETAIL';\nexport const GET_POKEMON_NAME = 'GET_POKEMON_NAME';\nexport const SET_POKEMON_DETAIL = 'SET_POKEMON_DETAIL';\nexport const POKEMONS_TYPE = 'POKEMONS_TYPE';\n","export const POKEMON_URL = 'http://localhost:3001/pokemons';\nexport const POKEMON_NAME = 'http://localhost:3001/pokemons/?name=';\nexport const POKEMON_ID = 'http://localhost:3001/pokemons/';\nexport const POKEMON_TYPE = 'http://localhost:3001/types';\n\n","import axios from 'axios';\nimport { GET_POKEMONS, GET_POKEMONS_TYPES, GET_POKEMONS_DETAIL, SET_POKEMON_DETAIL, POKEMONS_TYPE } from './actionsNames';\nimport { POKEMON_URL, POKEMON_TYPE, POKEMON_ID } from '../constants';\n\n\nexport function getPokemons() {\n    return (dispatch) => {\n            axios.get(POKEMON_URL).then(response => {\n                dispatch({ type: GET_POKEMONS, payload: response.data })\n            })\n            .catch(error => console.log(error));\n    }\n}\n\n\nexport function getPokemonsTypes() {\n    return (dispatch) => {\n            axios.get(POKEMON_TYPE).then(response => {\n                dispatch({ type: GET_POKEMONS_TYPES, payload: response.data })\n            })\n            .catch(error => console.log(error));\n    }\n}\n\n\nexport function getPokemonDetail(id) {\n    return (dispatch) => {\n            return axios.get(POKEMON_ID + id).then(response => {\n                dispatch({ type: GET_POKEMONS_DETAIL, payload: response.data[0] })\n            })\n            .catch(error => {\n                if(error.response?.status !== 404) alert(\"Something went wrong\")\n                dispatch({ type: GET_POKEMONS_DETAIL, payload: null })\n            });\n    }\n}\n\n\nexport function clearDetail() {\n    return {\n        type: SET_POKEMON_DETAIL, payload: undefined\n    }\n}","import React from 'react'\nimport './loadingSpin.css'\n\nfunction LoadingSpin() {\n    return (\n        <div>\n            <h2 className=\"u-text-center\">CARGANDO...</h2>\n            <div className=\"o-pokeball c-loader u-flash\"></div>\n        </div>\n    )\n}\n\nexport default LoadingSpin;\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getPokemons, getPokemonsTypes } from '../../actions';\nimport LoadingSpin from '../../Loading';\n\n\n\nfunction Home() {\n    \n    const allPokemons = useSelector(state => state.allPokemons);\n    const dispatch = useDispatch();\n    const [currentPage, setCurrentPage] = useState(0);\n    const [input, setInput] = useState('');\n    const [ Loading, setLoading ] = useState(false);\n    const pokemonsTypes = useSelector(state => state.pokemonsTypes);\n    const [filteredPokemons, setFilteredPokemons] = useState([])\n\n\n    useEffect(() => {\n        setLoading(true);\n        dispatch(getPokemons())\n    }, []);\n\n    useEffect(() => {\n        dispatch(getPokemonsTypes())\n    }, []);\n\n    \n    useEffect(() => {\n        const filtered = input.length === 0 ? allPokemons : allPokemons.filter(poke => poke.name.includes(input));\n        const filteredPoke = filtered.slice(currentPage, currentPage + 12);\n        setFilteredPokemons(allPokemons)\n        setFilteredPokemons(filteredPoke);\n    }, [allPokemons,input, currentPage]);\n    \n    // useEffect(() => {\n    //     setFilteredPokemons(allPokemons)\n    // }, [allPokemons]);\n    \n    const nextPage = () => {\n        if(allPokemons.filter(poke => poke.name.includes(input)).length > currentPage + 12) \n            setCurrentPage(currentPage + 12);\n            \n    }\n\n    const prevPage = () => {\n        if(currentPage > 0) \n        setCurrentPage(currentPage - 12);\n    }\n   \n    const handleChange = (e) => {\n        setCurrentPage(0);\n        setInput(e.target.value);\n    };\n\n    const handleOrderChange = (e) => {\n        if(e.target.value === 'All') setFilteredPokemons(filteredPokemons);\n        if(e.target.value === 'A-Z') {\n            const result = (((filteredPokemons.sort((a,b) => a.name > b.name ? 1 : -1))))\n            setFilteredPokemons(result);\n        }\n        if(e.target.value === 'Z-A') {\n            const result = ((filteredPokemons.sort((a,b) => a.name < b.name ? 1 : -1)));\n            setFilteredPokemons(result);\n        }\n        if(e.target.value === 'more HP') {\n            const result = ((filteredPokemons.sort((a,b) => a.hp > b.hp ? 1 : -1)));\n            setFilteredPokemons(result);\n        }\n        if(e.target.value === 'less HP') {\n            const result = ((filteredPokemons.sort((a,b) => a.hp < b.hp ? 1 : -1)));\n            setFilteredPokemons(result);\n        }\n    }\n\n\n    const handleFilterChange = (e) => {\n        if(e.target.value === 'All') console.log(filteredPokemons);\n        let arrayPoke = filteredPokemons.filter(el => \n            el.Types.length ? el.Types[0].name === e.target.value\n                            ? true \n                            : el.Types.length > 1 ? el.Types[1] === e.target.value\n                            ? true : false\n                            : false\n                            : false);\n                            console.log(arrayPoke);\n    }\n    // Falta el filtro por pokemons existentes y los creados por el usuario\n\n    return ( \n        <div>\n            <h3>FIND YOUR POKEMON</h3>\n            <button onClick={ prevPage }>Previous</button>\n            <button onClick={ nextPage }>Next</button>\n            <input \n                type=\"text\"\n                placeholder=\"...\"\n                value={ input }\n                onChange={ handleChange }\n            />\n            <br />\n            <div>\n                <h4>ORDER</h4>\n                <select name=\"select\" onChange={(e) => handleOrderChange(e)}>\n                    <option value='All'>ALL</option>\n                    <option value='A-Z'>A-Z</option>\n                    <option value='Z-A'>Z-A</option>  \n                    <option value='more HP'>more HP</option>  \n                    <option value='less HP'>less HP</option>  \n                </select>\n            </div>\n            <div>\n            <h4>FILTER</h4>\n            <select name=\"select\" onChange={(e) => handleFilterChange(e)}>\n                <option value='All'>All</option>\n                {pokemonsTypes && pokemonsTypes.map(type => (\n                    <option key={type.id} value={type.name}>{type.name}</option>\n                ))}\n            </select>\n            </div>\n                \n                { \n                    filteredPokemons ? filteredPokemons.map(poke => (\n                    <div key={poke.id}>\n                        <Link to={`/pokemon/${poke.id}`}>\n                            <span>{poke.name}</span>\n                            <img src={poke.sprite} />\n                            {poke.Types && poke.Types.map((p,i) => (\n                                <div key={i}>\n                                    {p.name}\n                                </div>\n                            ))}\n                             <hr/>\n                        </Link>\n                    </div>\n                    )) : <h1>NOT FOUND !!!</h1>    \n                }    \n        </div>\n    ) \n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { clearDetail, getPokemonDetail } from '../../actions/index';\nimport LoadingSpin from '../../Loading';\n\nfunction PokemonDetail() {\n\n    const dispatch = useDispatch();\n    const pokemonDetail = useSelector(state => state.pokemonDetail);\n    const [ loading, setLoading ] = useState(false);\n    const { id } = useParams();\n\n    useEffect(() => {\n        setLoading(true);\n        dispatch(getPokemonDetail(id))\n        return () => {\n            dispatch(clearDetail())\n        }\n    }, [dispatch, id])\n\n    useEffect(() => {\n        if (pokemonDetail.sprite) setLoading(false);\n    }, [ pokemonDetail ]);\n\n            return ( !loading ? \n            <div>\n                <img src={pokemonDetail.sprite} alt='sprite' />\n                <div>Name: {pokemonDetail.name}</div>\n                <div>id: {pokemonDetail.id}</div>\n                <div>attack: {pokemonDetail.attack}</div>\n                <div>defense: {pokemonDetail.defense}</div>\n                <div>hp: {pokemonDetail.hp}</div>\n                <div>height: {pokemonDetail.height}</div>\n                <div>weight: {pokemonDetail.weight}</div>\n                <div>speed: {pokemonDetail.speed}</div>\n                <div>Types: {pokemonDetail.Types && pokemonDetail.Types.map((p,i) => (<div key={i}>{p.name}</div>))}</div>\n            </div>\n            : <LoadingSpin />\n            )\n}\n\nexport default PokemonDetail;\n","\n\nexport const Validate = (input) => {\n\tlet errors = {};\n\tlet reg = /^\\d+$/;\n\tif (!input.name) {\n\t\terrors.name = 'Name is required';\n\t}\n\tif (!input.hp || input.hp.search(reg) === -1) {\n\t\terrors.hp = 'HP is required and it must be a number';\n\t}\n\tif (!input.attack || input.attack.search(reg) === -1) {\n\t\terrors.attack = 'Attack is required and it must be a number';\n\t}\n\tif (!input.defense || input.defense.search(reg) === -1) {\n\t\terrors.defense = 'Defense is required and it must be a number';\n\t}\n    if (!input.weight || input.weight.search(reg) === -1) {\n        errors.weight = 'Weight is required and it must be a number';\n    }\n    if (!input.height || input.height.search(reg) === -1) {\n        errors.height = 'Height is required and it must be a number';\n    }\n\tif (!input.speed || input.speed.search(reg) === -1) {\n\t\terrors.speed = 'Speed is required and it must be a number';\n\t}\n\treturn errors;\n};\n\nexport default Validate;\n","import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { Validate } from '../Validate/validate';\nimport { POKEMON_URL } from '../../constants';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemonsTypes } from '../../actions/index';\n\n\nfunction CreatePokemon() {\n\n    const [input, setInput] = useState({\n        name: '',\n        hp: undefined,\n        attack: undefined,\n        defense: undefined,\n        weight: undefined,\n        height: undefined,\n        speed: undefined,\n        type: 1,\n        sprite: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/500.svg'\n    })\n\n    const dispatch = useDispatch();\n    const pokemonsTypes = useSelector(state => state.pokemonsTypes);\n    const [Types, setTypes] = useState([])\n    const [Errors, setErrors] = useState({})\n    const [stop, setStop] = useState({errors: false, create: false})\n\n    useEffect(() => {\n\t\tdispatch(getPokemonsTypes());\n\t}, [getPokemonsTypes]);\n\n    useEffect(() => {\n\t\tif(Types.length) {\n\t\t\tlet total = pokemonsTypes.reduce((acc, elem) => {\n\t\t\t\tif(Types.includes(elem.name) === true) {\n\t\t\t\t\tacc.push(elem.id);\n\t\t\t\t}\n\t\t\t\treturn acc;\n\t\t\t}, []);\n\t\t\tsetInput({...input, type: total});\n\t\t}\n\t}, [Types]);\n\n\n    const handleTypes = (e) => {\n\t\tif(Types.length < 2) {\n\t\t\tif (!Types.includes(e.target.value)) {\n\t\t\t\tsetTypes([...Types, e.target.value]);\n\t\t\t}\n\t\t} else setTypes([e.target.value]);\n\t};\n\n\n    useEffect(() => {\n\t\tif(!Object.keys(Errors).length) {\n\t\t\tsetStop({...stop, errors: false});\n\t\t}\n\t}, [Errors]);\n\n\n    const handleInputChange = (e) => {\n        setErrors(Validate({\n            ...input,\n            [e.target.name]: e.target.value\n        }));\n        setInput({\n            ...input,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tif(Object.keys(Errors).length) {\n\t\t\tsetStop({...stop, errors: true});\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tawait axios.post(POKEMON_URL, input);\n\t\t\t\tsetStop({...stop, create: true});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t}\n\t};\n\n\n    return (\n        <div>\n           <h1>CREATE POKEMON</h1>\n           <form className=\"\" onSubmit={ handleSubmit }>\n                {stop.errors ? (\n\t\t\t\t\t\t<div className='div_errors'>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{Object.values(Errors).map((elem) => (\n\t\t\t\t\t\t\t\t\t<li key={elem} className='li_text'>\n\t\t\t\t\t\t\t\t\t\t{elem}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n                <label>NAME</label>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    value={input.name}\n                    onChange={handleInputChange}\n                />\n                <hr/>\n                <label>HP</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"hp\"\n                    value={input.hp}\n                    onChange={handleInputChange}\n                />\n                <hr/>\n                <label>ATTACK</label>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"attack\"\n                    value={input.attack}\n                    onChange={handleInputChange}\n                />\n                <hr/>\n                <label>DEFENSE</label>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"defense\"\n                    value={input.defense}\n                    onChange={handleInputChange}\n                />\n                <hr/>\n                <label>WEIGHT</label>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"weight\"\n                    value={input.weight}\n                    onChange={handleInputChange}\n                />\n                <hr/>\n                <label>HEIGHT</label>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"height\"\n                    value={input.height}\n                    onChange={handleInputChange}\n                />\n                <hr/>\n                <label>SPEED</label>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"speed\"\n                    value={input.speed}\n                    onChange={handleInputChange}\n                />\n                <hr/>\n                <label>SPRITE</label>\n                <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"sprite\"\n                    value={input.sprite}\n                    onChange={handleInputChange}\n                />\n                <hr/>\n                <div className='div_types'>\n\t\t\t\t\t\t<select onChange={(e) => handleTypes(e)}>\n\t\t\t\t\t\t\t{pokemonsTypes &&\n\t\t\t\t\t\t\t\tpokemonsTypes.map((t, i) => (\n\t\t\t\t\t\t\t\t\t<option key={i} value={t.name}>\n\t\t\t\t\t\t\t\t\t\t{t.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<div className='div_type_container'>\n\t\t\t\t\t\t\t{Types &&\n\t\t\t\t\t\t\t\tTypes.map((el, i) => (\n\t\t\t\t\t\t\t\t\t<div key={i} className='div_type'>\n\t\t\t\t\t\t\t\t\t\t<label className='label'>{el}</label>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                <button type=\"submit\">CREATE POKEMON</button>\n                {stop.create ? (\n\t\t\t\t\t\t<div className='div_create_confirm'>\n\t\t\t\t\t\t\t<h3 className='message_create'>\n\t\t\t\t\t\t\t\tPokemon created !!!\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n           </form>\n        </div>\n    )\n}\n\nexport default CreatePokemon;\n\n\n// Formulario controlado con:\n// 1--> Detalle de pokemon \n// 2--> Poder agregar mas de un type \n// 3--> Boton para crear el nuevo pokemon (se va a agregar a nuestra BD)\n\n {/* name\n                id\n                hp\n                attack\n                defense\n                weight\n                height\n                speed\n                type\n                img\n                */}","import './App.css';\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport LandingPage from './components/LandingPage';\r\nimport NavBar from './components/NavBar';\r\nimport Home from './components/Home';\r\nimport SearchBar from './components/SearchBar';\r\nimport PokemonDetail from './components/PokemonDetail';\r\nimport CreatePokemon from './components/CreatePokemon';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n      <Route exact path='/' component={LandingPage} />\r\n      <Route path='/home' component={Home} />\r\n      <Route path='/pokemon/:id' component={PokemonDetail} />\r\n      <Route path='/create' component={CreatePokemon} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { GET_POKEMONS, GET_POKEMONS_TYPES, GET_POKEMONS_DETAIL, SET_POKEMON_DETAIL } from '../actions/actionsNames';\n\nconst initialState = {\n    allPokemons: [],\n    pokemonsTypes: [],\n    pokemonDetail: {}\n\n};\n\n\nfunction rootReducer(state = initialState, action) {\n    switch(action.type) {\n        case GET_POKEMONS:\n            return {\n                ...state,\n                allPokemons: action.payload\n            };\n        case GET_POKEMONS_TYPES:\n            return {\n                ...state,\n                pokemonsTypes: action.payload\n            };\n        case GET_POKEMONS_DETAIL:\n            return {\n                ...state,\n                pokemonDetail: action.payload\n            }\n       \n        default:\n            return state;\n    }\n};\n\n\n\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducer\";\nimport thunk from \"redux-thunk\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n))\n\n  \n  export default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/index';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store = { store }>  \r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}